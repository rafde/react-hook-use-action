name: Version and tag

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      release:
        description: 'The type of release: major, minor, or patch'
        options:
          - NONE
          - patch
          - prerelease
          - minor
          - major
        required: true
        type: choice

  workflow_call:
    inputs:
        release:
            description: 'The type of release: major, minor, or patch'
            default: NONE
            required: true
            type: string

jobs:
  version-and-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        if: ${{ inputs.release != 'NONE' }}
        uses: actions/checkout@v4

      - name: setup git config
        if: ${{ inputs.release != 'NONE' }}
        run: |
          git config user.name "GitHub Actions Versioning and tagging"
          git config user.email "no@real-email.com"

      - name: Set up Node.js
        if: ${{ inputs.release != 'NONE' }}
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: npm

      - name: Restore cache test-cache
        if: ${{ inputs.release != 'NONE' }}
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.test-cache
          key: ${{ runner.os }}-test-${{ hashFiles('{src,__tests__}/**/*.{ts,tsx}') }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-test-

      - name: Restore cache parcel-cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.parcel-cache
          key: ${{ runner.os }}-build-${{ hashFiles('src/**/**.{ts,tsx}') }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Install dependencies
        if: ${{ inputs.release != 'NONE' }}
        run: npm install

      - name: Version and tag
        if: ${{ inputs.release != 'NONE' }}
        run: |
          npm run version:${{ inputs.release }}
