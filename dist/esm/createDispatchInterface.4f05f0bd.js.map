{"mappings":"AAee,kDAMd,QAAiD,EACjD,OAA4B,EAC5B,UAAwE,EACxE,OAAiB;IAEjB,MAAM,MAAM;QACX,SAAS,CAAA,UAAW,SAAU;yBAC7B;gBACA,MAAM;YACP;QACA,gBAAgB,CAAA,UAAW,SAAU;yBACpC;gBACA,MAAM;YACP;QACA,OAAO,CAAA,UAAW,SAAU;yBAC3B;gBACA,MAAM;YACP;QACA,QAAQ,OAAgB,EAAE,KAAc;YACvC,IAAK,OAAO,YAAY,YAAY,OAAO,YAAY,UACtD,OAAO,SAAU;gBAChB,SAAS;oBAAE,CAAE,QAAS,EAAE;gBAAO;gBAC/B,MAAM;YACP;YAGD,OAAO,SAAU;yBAChB;gBACA,MAAM;YACP;QACD;QACA,eAAe,OAAgB,EAAE,KAAc;YAC9C,IAAK,OAAO,YAAY,YAAY,OAAO,YAAY,UACtD,OAAO,SAAU;gBAChB,SAAS;oBAAE,CAAE,QAAS,EAAE;gBAAO;gBAC/B,MAAM;YACP;YAGD,OAAO,SAAU;yBAChB;gBACA,MAAM;YACP;QACD;IACD;IAEA,MAAM,kBAAkB,OAAO,MAAM,CACpC,UACA;aACC;iBACA;IACD;IAGD,IAAK,WAAW,OAAO,YAAY,UAAW;QAC7C,MAAM,gBAAgB,CAAC;QAKvB,IAAM,MAAM,QAAQ,QACnB,IAAK,CAAG,CAAA,QAAQ,GAAE,KAAO,OAAO,OAAO,CAAE,KAAM,KAAK,YACnD,aAAa,CAAE,KAA+C,GAAG,CAAE,SAAS,GAAG,OAAU,SAAU;yBAClG;sBACA;sBACA;YACD;QAGF,OAAO,MAAM,CAAE,gBAAgB,GAAG,EAAE;IACrC;IAEA,OAAO,OAAO,MAAM,CAAE,iBAAiB;QACtC,MAAM,WAAY;IACnB;AACD","sources":["src/internal/createDispatchInterface.ts"],"sourcesContent":["import type { CTAHistory, } from '../types/CTAHistory';\nimport type { CTAState, } from '../types/CTAState';\nimport type { DefaultActionsRecord, } from '../types/DefaultActionsRecord';\nimport type { DispatchParameterTypes, } from '../types/DispatchParameterTypes';\nimport type {\n\tUseCTAParameterCreateFunc,\n\tUseCTAParameterCreateFuncReturnRecord,\n} from '../types/UseCTAParameterCreateFunc';\nimport type {\n\tDispatch,\n\tUseCTAReturnTypeDispatch,\n} from '../types/UseCTAReturnTypeDispatch';\n\nimport ctaReducer from './ctaReducer';\n\nexport default function createDispatchInterface<\n\tInitial extends CTAState,\n\tActions,\n\tFR extends UseCTAParameterCreateFuncReturnRecord,\n\tReturnValue,\n>(\n\tdispatch: Dispatch<Initial, Actions, ReturnValue>,\n\thistory: CTAHistory<Initial>,\n\tcreateFunc: UseCTAParameterCreateFunc<Initial, Actions, FR, ReturnValue>,\n\tactions?: Actions,\n): UseCTAReturnTypeDispatch<Initial, Actions, FR, ReturnValue> {\n\tconst cta = {\n\t\treplace: payload => dispatch( {\n\t\t\tpayload,\n\t\t\ttype: 'replace',\n\t\t} as DispatchParameterTypes<Initial, Actions, ReturnValue>, ),\n\t\treplaceInitial: payload => dispatch( {\n\t\t\tpayload,\n\t\t\ttype: 'replaceInitial',\n\t\t} as DispatchParameterTypes<Initial, Actions, ReturnValue>, ),\n\t\treset: payload => dispatch( {\n\t\t\tpayload,\n\t\t\ttype: 'reset',\n\t\t} as DispatchParameterTypes<Initial, Actions, ReturnValue>, ),\n\t\tupdate( payload: unknown, value: unknown, ) {\n\t\t\tif ( typeof payload === 'number' || typeof payload === 'string' ) {\n\t\t\t\treturn dispatch( {\n\t\t\t\t\tpayload: { [ payload ]: value, },\n\t\t\t\t\ttype: 'update',\n\t\t\t\t} as DispatchParameterTypes<Initial, Actions, ReturnValue>, );\n\t\t\t}\n\n\t\t\treturn dispatch( {\n\t\t\t\tpayload,\n\t\t\t\ttype: 'update',\n\t\t\t} as DispatchParameterTypes<Initial, Actions, ReturnValue>, );\n\t\t},\n\t\tupdateInitial( payload: unknown, value: unknown, ) {\n\t\t\tif ( typeof payload === 'number' || typeof payload === 'string' ) {\n\t\t\t\treturn dispatch( {\n\t\t\t\t\tpayload: { [ payload ]: value, },\n\t\t\t\t\ttype: 'updateInitial',\n\t\t\t\t} as DispatchParameterTypes<Initial, Actions, ReturnValue>, );\n\t\t\t}\n\n\t\t\treturn dispatch( {\n\t\t\t\tpayload,\n\t\t\t\ttype: 'updateInitial',\n\t\t\t} as DispatchParameterTypes<Initial, Actions, ReturnValue>, );\n\t\t},\n\t} as UseCTAReturnTypeDispatch<Initial, Actions, FR, ReturnValue>['cta'];\n\n\tconst dispatchWrapper = Object.assign(\n\t\tdispatch,\n\t\t{\n\t\t\tcta,\n\t\t\thistory,\n\t\t},\n\t);\n\n\tif ( actions && typeof actions === 'object' ) {\n\t\tconst customActions = {} as Record<\n\t\t\tExclude<keyof Exclude<Actions, undefined>, keyof DefaultActionsRecord<Initial>>,\n\t\t\t( ...args: unknown[] ) => ReturnValue\n\t\t>;\n\n\t\tfor ( const type in actions ) {\n\t\t\tif ( !( type in cta ) && typeof actions[ type ] === 'function' ) {\n\t\t\t\tcustomActions[ type as unknown as keyof typeof customActions ] = ( payload, ...args ) => dispatch( {\n\t\t\t\t\tpayload,\n\t\t\t\t\ttype,\n\t\t\t\t\targs,\n\t\t\t\t} as Parameters<typeof ctaReducer<Initial, Actions, ReturnValue>>[0]['nextCTAProps'], );\n\t\t\t}\n\t\t}\n\t\tObject.assign( dispatchWrapper.cta, customActions, );\n\t}\n\n\treturn Object.assign( dispatchWrapper, {\n\t\tfunc: createFunc( dispatchWrapper, ),\n\t}, );\n}\n"],"names":[],"version":3,"file":"createDispatchInterface.4f05f0bd.js.map"}