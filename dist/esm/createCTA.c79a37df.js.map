{"mappings":";;;;;;;AAUO,SAAS,0CAKf,eAAuD;IAEvD,MAAM,WACL,OAAO,EACP,GAAG;IACJ,MAAM,UAAU,OAAO,gBAAgB,OAAO,KAAK,cAChD,YACA;QACD,GAAG,gBAAgB,OAAO;IAC3B;IACD,IAAI,UAA+B;QAClC,SAAS;QACT,SAAS;iBACT;QACA,UAAU;QACV,iBAAiB;IAClB;IACA,IAAI,kBAA4C;QAC/C,GAAG,OAAO;QACV,YAAY,IAAI;IACjB;IACA,MAAM,UAAU,CAAA,GAAA,yCAAc,EAAG,gBAAgB,OAAO;IAExD,MAAM,cAAc,CAAA,GAAA,yCAAsB,EAKzC,SAAS,aAAc,YAAsF;QAC5G,MAAM,qBAAqB,CAAA,GAAA,wCAAS,EAA2B;qBAC9D;qBACA;6BACA;0BACA;QACD;QAEA,IAAK,uBAAuB,iBAAkB;YAC7C,kBAAkB;YAClB,UAAU;gBACT,SAAS,gBAAgB,OAAO;gBAChC,SAAS,gBAAgB,OAAO;gBAChC,SAAS,gBAAgB,OAAO;gBAChC,UAAU,gBAAgB,QAAQ;gBAClC,iBAAiB,gBAAgB,eAAe;YACjD;QACD;QAEA,YAAY,OAAO,GAAG;QACtB,OAAO;IACR,GACA;IAGD,YAAY,OAAO,GAAG;IAEtB,OAAO;QACN;QACA;KACA;AACF","sources":["src/internal/createCTA.ts"],"sourcesContent":["import { CTAHistory, } from '../types/CTAHistory';\nimport type { CTAState, } from '../types/CTAState';\nimport type { DefaultActionsRecord, } from '../types/DefaultActionsRecord';\nimport type { ActionsRecordProp, UseCTAParameterActionsRecordProp, } from '../types/UseCTAParameterActionsRecordProp';\nimport { UseCTAReturnType, } from '../types/UseCTAReturnType';\nimport { compareCallback, } from './compareCallback';\nimport { CreateCTAProps, } from '../types/CreateCTAProps';\nimport { createDispatchInterface, } from './createDispatchInterface';\nimport ctaReducer, { CTAReducerState, } from './ctaReducer';\n\nexport function createCTA<\n\tInitial extends CTAState,\n\tActions extends UseCTAParameterActionsRecordProp<Initial> | undefined,\n\tActionsRecord = Actions extends Partial<DefaultActionsRecord<Initial>> ? ActionsRecordProp<Initial, Actions> : Actions,\n>(\n\tuseCTAParameter: CreateCTAProps<Initial, ActionsRecord>,\n): UseCTAReturnType<Initial, ActionsRecord, CTAHistory<Initial>> {\n\tconst {\n\t\tinitial,\n\t} = useCTAParameter;\n\tconst actions = typeof useCTAParameter.actions === 'undefined'\n\t\t? undefined\n\t\t: {\n\t\t\t...useCTAParameter.actions,\n\t\t};\n\tlet history: CTAHistory<Initial> = {\n\t\tchanges: null,\n\t\tcurrent: initial,\n\t\tinitial,\n\t\tprevious: null,\n\t\tpreviousInitial: null,\n\t};\n\tlet ctaReducerState: CTAReducerState<Initial> = {\n\t\t...history,\n\t\tchangesMap: new Map(),\n\t};\n\tconst compare = compareCallback( useCTAParameter.compare, );\n\n\tconst ctaCallback = createDispatchInterface<\n\t\tInitial,\n\t\tActionsRecord,\n\t\tCTAHistory<Initial>\n\t>(\n\t\tfunction _ctaCallback( nextCTAProps: Parameters<typeof ctaReducer<Initial, ActionsRecord>>[0]['nextCTAProps'], ) {\n\t\t\tconst newCtaReducerState = ctaReducer<Initial, ActionsRecord>( {\n\t\t\t\tactions,\n\t\t\t\tcompare,\n\t\t\t\tctaReducerState,\n\t\t\t\tnextCTAProps,\n\t\t\t}, );\n\n\t\t\tif ( newCtaReducerState !== ctaReducerState ) {\n\t\t\t\tctaReducerState = newCtaReducerState;\n\t\t\t\thistory = {\n\t\t\t\t\tchanges: ctaReducerState.changes,\n\t\t\t\t\tcurrent: ctaReducerState.current,\n\t\t\t\t\tinitial: ctaReducerState.initial,\n\t\t\t\t\tprevious: ctaReducerState.previous,\n\t\t\t\t\tpreviousInitial: ctaReducerState.previousInitial,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tctaCallback.history = history;\n\t\t\treturn history;\n\t\t},\n\t\tactions,\n\t);\n\n\tctaCallback.history = history;\n\n\treturn [\n\t\thistory,\n\t\tctaCallback,\n\t];\n}\n"],"names":[],"version":3,"file":"createCTA.c79a37df.js.map"}