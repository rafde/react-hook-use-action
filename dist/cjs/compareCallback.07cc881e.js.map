{"mappings":";;;;;;;;;AAMe,kDAAqD,OAAyC;IAC5G,IAAK,OAAO,YAAY,YACvB,OAAO,SAAS,IAAK,aAA2C,EAAE,SAAuC;QACxG,OAAO,CAAA,GAAA,iCAAc,EAAG,eAAe;IACxC;IAGD,OAAO,SAAS,IAAK,aAA2C,EAAE,SAAuC,EAAE,GAAkB;QAC5H,OAAO,QAAS,QACf,eACA,WACA;YACC,KAAK,CAAA,GAAA,iCAAc;iBACnB;QACD;IAEF;AACD","sources":["src/internal/compareCallback.ts"],"sourcesContent":["import { strictDeepEqual, } from 'fast-equals';\nimport type { CTAState, } from '../types/CTAState';\nimport type { UseCTAParameterCompare, } from '../types/UseCTAParameterCompare';\n\ntype StrictDeepEqualParameters = Parameters<typeof strictDeepEqual>;\n\nexport default function compareCallback<Initial extends CTAState,>( compare?: UseCTAParameterCompare<Initial>, ) {\n\tif ( typeof compare !== 'function' ) {\n\t\treturn function cmp( previousValue: StrictDeepEqualParameters[0], nextValue: StrictDeepEqualParameters[1], ) {\n\t\t\treturn strictDeepEqual( previousValue, nextValue, );\n\t\t};\n\t}\n\n\treturn function cmp( previousValue: StrictDeepEqualParameters[0], nextValue: StrictDeepEqualParameters[1], key: keyof Initial, ) {\n\t\treturn Boolean( compare(\n\t\t\tpreviousValue,\n\t\t\tnextValue,\n\t\t\t{\n\t\t\t\tcmp: strictDeepEqual,\n\t\t\t\tkey,\n\t\t\t},\n\t\t), );\n\t};\n}\n\nexport type CompareCallbackReturnType = ReturnType<typeof compareCallback>;\n"],"names":[],"version":3,"file":"compareCallback.07cc881e.js.map"}